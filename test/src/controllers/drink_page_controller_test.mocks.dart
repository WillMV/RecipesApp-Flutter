// Mocks generated by Mockito 5.4.2 from annotations
// in recipes_app/test/src/controllers/drink_page_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:recipes_app/src/models/drink_model.dart' as _i4;
import 'package:recipes_app/src/models/meal_model.dart' as _i5;
import 'package:recipes_app/src/repositories/recipes_repositories.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FetchRecipes].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchRecipes extends _i1.Mock implements _i2.FetchRecipes {
  @override
  void resValidate(int? statusCode) => super.noSuchMethod(
        Invocation.method(
          #resValidate,
          [statusCode],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<List<_i4.Drink>> fetchDrinks() => (super.noSuchMethod(
        Invocation.method(
          #fetchDrinks,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Drink>>.value(<_i4.Drink>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Drink>>.value(<_i4.Drink>[]),
      ) as _i3.Future<List<_i4.Drink>>);
  @override
  _i3.Future<List<_i5.Meal>> fetchMeals() => (super.noSuchMethod(
        Invocation.method(
          #fetchMeals,
          [],
        ),
        returnValue: _i3.Future<List<_i5.Meal>>.value(<_i5.Meal>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.Meal>>.value(<_i5.Meal>[]),
      ) as _i3.Future<List<_i5.Meal>>);
}
